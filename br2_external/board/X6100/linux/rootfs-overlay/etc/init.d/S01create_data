#!/bin/sh

start() {
    # Check fat32 not exists
    parted -m -s /dev/mmcblk0 print | grep fat32
    retVal=$?
    if [ $retVal -eq 0 ]; then
        echo "Fat32 partition already exists"
        return
    fi
    # Get free space info
    FREE_INFO=$(parted -sm /dev/mmcblk0 unit B print free | tail -n1 | sed -r 's/B//g' | grep free)
    retVal=$?
    if [ $retVal -ne 0 ]; then
        echo "No free space available"
        return
    fi
    FREE_ARR=(${FREE_INFO//:/ })

    # Create overlayfs (512MB)
    start=$(( (FREE_ARR[1] / 1048576 ) + 1 ))
    end=$(( $start + 512 ))
    # Create (or recreate) partition
    parted -m -s -a opt /dev/mmcblk0 mkpart primary ext4 ${start}MiB ${end}MiB
    partprobe /dev/mmcblk0
    # Check if we have a preexisting OVERLAY partition
    overlayPartition=$(blkid -L OVERLAY)
    if [ -n "$overlayPartition" ]; then
        echo "Mount existing overlay partition"
        # Mount partition
        mount $overlayPartition
    else
        # Format partition
        mkfs -t ext4 -F -L OVERLAY /dev/mmcblk0p3
        # Mount partition
        mount /dev/mmcblk0p3
    fi

    parted -m -s -a opt /dev/mmcblk0 mkpart primary fat32 $(( end + 1 ))MiB ${FREE_ARR[2]}B
    partprobe /dev/mmcblk0
    # Check if we have a preexisting DATA partition
    dataPartition=$(blkid -L DATA)
    if [ -n "$dataPartition" ]; then
        echo "Mount existing data partition"
        # Mount partition
        mount $dataPartition
        return
    fi
    # Format partition
    mkfs -t vfat -n DATA /dev/mmcblk0p4
    # Mount partition
    mount /dev/mmcblk0p4
}


case "$1" in
    start)
        start;;
    stop)
        ;;
    *)
        echo "Usage: $0 {start}"
    exit 1
esac
